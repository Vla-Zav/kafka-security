version: '3.5'

x-kafka-common:
  &kafka-common
  image: confluentinc/cp-kafka:7.4.4
  environment:
    &kafka-common-env
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    KAFKA_DELETE_TOPIC_ENABLE: true
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
    KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
    KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
  networks:
    - confluent

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
    networks:
      - confluent
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka-1:
    <<: *kafka-common
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./kafka-1-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,SSL://kafka-1:9093
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds

  kafka-2:
    <<: *kafka-common
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9192:9192"
      - "9193:9193"
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./kafka-2-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9192,SSL://0.0.0.0:9193
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9192,SSL://kafka-2:9193
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds

  kafka-3:
    <<: *kafka-common
    restart: always
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9292:9292"
      - "9293:9293"
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ./kafka-3-creds:/etc/kafka/secrets
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9292,SSL://0.0.0.0:9293
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9292,SSL://kafka-3:9293
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds


  ubuntu:
    image: ubuntu:latest
    stdin_open: true
    tty: true
    ports:
      - "9090:80"
    command: bash
    volumes:
      - ./kafka-1-creds:/kafka-1-creds
      - ./kafka-2-creds:/kafka-2-creds
      - ./kafka-3-creds:/kafka-3-creds
      - ./common:/common
    networks:
      - confluent

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:

networks:
  confluent:

